<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<insert id="insert" parameterType="productvo">
		<![CDATA[
			insert into product(no, code, name, supply_price, sell_price, summary_description, detailed_description, reg_date, weight, option_available, del_status, display_status, availability, manage_status, stock_quantity)
			values(
				nextval('seq_product_no'),
				concat('P', lpad(currval('seq_product_no')::varchar, 7, '0')),
				#{ name },
				#{ supplyPrice },
				#{ sellPrice },
				#{ summaryDescription },
				#{ detailedDescription },
				now(),
				#{ weight },
				#{ optionAvailable },
				'N',
				'${ displayStatus }',
				#{ availability },
				'${ manageStatus }',
				#{ stockQuantity }
			);
		]]>
	</insert>
	
	<insert id="insertImage" parameterType="productimagevo">
		<![CDATA[
			insert into product_image(name, extension, path, status, product_no)
			values(
				#{ name }, 
				#{ extension }, 
				#{ path }, 
				'${ status }',
		]]>
		<choose>
			<when test="productNo == null">
				<![CDATA[
					(select last_value from seq_product_no)
				]]>
			</when>
			<otherwise>
				<![CDATA[
					#{ productNo }
				]]>
			</otherwise>
		</choose>
		<![CDATA[
			);
		]]>
	</insert>
	
	<select id="searchToAdmin" parameterType="map" resultType="productsummarydto">
		<![CDATA[
			select 
				no, 
				code, 
				name, 
				sell_price, 
				to_char(reg_date, 'YYYY-MM-DD HH24:mm:ss') as reg_date, 
				del_status, 
				display_status, 
				availability, 
				manage_status,
				(
					select array_to_string(array_agg(name), ',')
					from category c, product_category pc
					where c.no = pc.no
						and pc.product_no = p.no) as category_list
			from product p
			where 1 = 1
		]]>
		<if test="no != null">
			<![CDATA[	
				and no = #{ no }
			]]>
		</if>
		<if test="code != null">
			<![CDATA[
				and code like concat('%', '${ code }', '%')
			]]>	
		</if>
		<if test="name != null">
			<![CDATA[
				and name like concat('%', '${ name }', '%')
			]]>	
		</if>
		<if test="sellPrice != null">
			<![CDATA[
				and sell_price > #{ sellPrice }
			]]>	
		</if>
		<if test="regDate != null">
			<![CDATA[
				and reg_date > #{ regDate }
			]]>	
		</if>
		<if test="delStatus != null">
			<![CDATA[
				and del_status = #{ delStatus }
			]]>	
		</if>
		<if test="displayStatus != null">
			<![CDATA[
				and display_status = #{ displayStatus }
			]]>	
		</if>
		<if test="availability != null">
			<![CDATA[
				and availability = #{ availability }
			]]>	
		</if>
		<if test="manageStatus != null">
			<![CDATA[
				and manage_status = #{ manageStatus }
			]]>	
		</if>
		<if test="category != null">
			<![CDATA[
				and (
					select array_to_string(array_agg(name), ',')
					from category c, product_category pc
					where c.no = pc.no
						and pc.product_no = p.no) like concat('%', #{ category }, '%')
			]]>	
		</if>
		<![CDATA[
			order by del_status, code asc
			offset '${ offset }'::integer limit '${ limit }'::integer;
		]]>
	</select>
	
	<select id="search" parameterType="map" resultType="productsummarydto">
		<![CDATA[
			select 
				no, 
				name, 
				sell_price,
				summary_description, 
				display_status, 
				manage_status,
				(
					select array_to_string(array_agg(name), ',')
					from category c, product_category pc
					where c.no = pc.no
						and pc.product_no = p.no) as category_list
			from product p
			where del_status = 'N'
				and availability = 'Y'
		]]>
		<if test="no != null">
			<![CDATA[	
				and no = #{ no }
			]]>
		</if>
		<if test="name != null">
			<![CDATA[
				and name like concat('%', '${ name }', '%')
			]]>	
		</if>
		<if test="displayStatus != null">
			<![CDATA[
				and display_status = #{ displayStatus }
			]]>	
		</if>
		<if test="category != null">
			<![CDATA[
				and (
					select array_to_string(array_agg(name), ',')
					from category c, product_category pc
					where c.no = pc.no
						and pc.product_no = p.no) like concat('%', #{ category }, '%')
			]]>	
		</if>
		<![CDATA[
			order by del_status, code asc
			offset '${ offset }'::integer limit '${ limit }'::integer;
		]]>
	</select>
	
	<select id="getToAdmin" parameterType="long" resultType="productdetailsdto">
		<![CDATA[
			select 
				no, 
				code, 
				name, 
				supply_price,
				sell_price, 
				summary_description,
				detailed_description,
				to_char(reg_date, 'YYYY-MM-DD HH24:mm:ss') as reg_date, 
				weight,
				option_available,
				del_status, 
				display_status, 
				availability, 
				manage_status,
				stock_quantity
			from product
			where no = #{ value };
		]]>
	</select>
	
	<select id="get" parameterType="long" resultType="productdetailsdto">
		<![CDATA[
			select 
				no, 
				code, 
				name, 
				sell_price, 
				detailed_description,
				weight,
				option_available,
				display_status
			from product
			where no = #{ value }
				and availability = 'Y'
				and del_status = 'N';
		]]>
	</select>
	
	<select id="getImageListByNo" parameterType="long" resultType="productimagedto">
		<![CDATA[
			select *
			from product_image
			where product_no = #{ value };
		]]>
	</select>

	<update id="updateToAdmin" parameterType="productvo">
		<![CDATA[
			update product
			set
				name = #{ name },
				supply_price = #{ supplyPrice },
				sell_price = #{ sellPrice }, 
				summary_description = #{ summaryDescription },
				detailed_description = #{ detailedDescription },
				weight = #{ weight },
				option_available = #{ optionAvailable },
				display_status = '${ displayStatus.value }', 
				availability = #{ availability }, 
				manage_status = '${ manageStatus }',
				stock_quantity = #{ stockQuantity }
			where no = #{ no };
		]]>
	</update>
	
	<delete id="deleteImages" parameterType="long">
		<![CDATA[
			delete
			from product_image
			where product_no = #{ value };
		]]>
	</delete>
	
	<update id="updateDelStatus" parameterType="long">
		<![CDATA[
			update product
			set del_status = 'Y'
			where no = #{ value };
		]]>
	</update>

</mapper>
